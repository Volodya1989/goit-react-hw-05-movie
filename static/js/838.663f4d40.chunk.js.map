{"version":3,"file":"static/js/838.663f4d40.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader/Loader.styled.js","components/Loader/Loader.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst PARAMS = `?language=en-US`;\nconst TOKEN = `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MzVhZGRlNzJjYjZjNzkwMzkxMDhjYzE0Zjc2NzgyOSIsInN1YiI6IjY0YWUyNDMxOGEwZTliMDBlMzc1YTc4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xeqs5DaMHOlE_quNyLNey2tG1GAeaLHSI5GGVan0qnI`;\n\nconst config = {\n  headers: {\n    Authorization: TOKEN,\n    accept: \"application/json\",\n  },\n};\nexport async function getTrandingMovies() {\n  return await axios.get(`${BASE_URL}trending/movie/day${PARAMS}`, config);\n}\n\nexport async function getMovieDetails(movie_id) {\n  return await axios.get(`${BASE_URL}movie/${movie_id}${PARAMS}`, config);\n}\n\nexport async function getMovieReviews(movie_id) {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews${PARAMS}&page=1`,\n    config\n  );\n}\n\nexport async function getMovieCast(movie_id) {\n  console.log(`${BASE_URL}movie/${movie_id}/credits${PARAMS}`);\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits${PARAMS}`,\n    config\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const StyledText = styled.p`\n  display: block;\n  text-align: center;\n  max-width: 150px;\n  margin: auto;\n`;\nexport const StyledGenresTitle = styled.h4`\n  margin: 0;\n`;\nexport const StyledImg = styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n`;\nexport const StyledList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  gap: 15px;\n  padding-bottom: 10px;\n  margin-right: 100px;\n  margin-left: 100px;\n  padding-left: 0;\n`;\nexport const StyledItem = styled.li`\n  list-style: none;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"../../api/moviesAPI\";\nimport Loader from \"../Loader\";\nimport { StyledList, StyledItem, StyledImg, StyledText } from \"./Cast.styled\";\nimport defaultImage from \"../../image/defaultImage.png\";\n\nconst Cast = () => {\n  const [cast, setDetails] = useState({});\n  const [isLoadedCast, setIsLoadedCast] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    onGettingMoveDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const onGettingMoveDetails = async () => {\n    try {\n      const response = await getMovieCast(movieId);\n      const resp = await response;\n      setDetails(resp.data.cast);\n      console.log(\"resp.data\", resp.data);\n      setTimeout(() => {\n        if (Object.keys(cast).length === 0) {\n          setIsLoadedCast(true);\n        }\n      }, 500);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div>\n      {!isLoadedCast && <Loader />}\n\n      {isLoadedCast && (\n        <>\n          {cast.length ? (\n            <StyledList>\n              {cast.map(({ id, name, profile_path, character }) => {\n                return (\n                  <StyledItem key={id}>\n                    {profile_path ? (\n                      <StyledImg\n                        src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                        alt={name}\n                        width=\"100\"\n                      />\n                    ) : (\n                      <StyledImg\n                        src={`${defaultImage}`}\n                        alt={name}\n                        width=\"120\"\n                        height=\"150\"\n                      />\n                    )}\n                    <StyledText>{name}</StyledText>\n                    <StyledText>Character: {character}</StyledText>\n                  </StyledItem>\n                );\n              })}\n            </StyledList>\n          ) : (\n            <p>We don't have any cast information for this movie</p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import styled from \"@emotion/styled\";\n\nexport const RotatingLinesStyled = styled.div`\n  display: block;\n  margin-left: 45%;\n  margin-top: 15%;\n`;\n","import { RotatingLines } from \"react-loader-spinner\";\nimport { RotatingLinesStyled } from \"./Loader.styled\";\n\nconst Loader = () => {\n  return (\n    <RotatingLinesStyled>\n      <RotatingLines\n        strokeColor=\"blue\"\n        margin=\"auto\"\n        textAlign=\"center\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </RotatingLinesStyled>\n  );\n};\nexport default Loader;\n"],"names":["BASE_URL","PARAMS","config","headers","Authorization","accept","getTrandingMovies","_getTrandingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","abrupt","sent","stop","getMovieDetails","_x","_getMovieDetails","_callee2","movie_id","_context2","getMovieReviews","_x2","_getMovieReviews","_callee3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_context4","console","log","StyledText","styled","p","_templateObject","_taggedTemplateLiteral","StyledImg","h4","_templateObject2","img","_templateObject3","StyledList","ul","_templateObject4","StyledItem","li","_templateObject5","_useState","useState","_useState2","_slicedToArray","cast","setDetails","_useState3","_useState4","isLoadedCast","setIsLoadedCast","movieId","useParams","useEffect","onGettingMoveDetails","_ref","response","resp","data","setTimeout","Object","keys","length","t0","_jsxs","children","_jsx","Loader","_Fragment","map","_ref2","id","name","profile_path","character","src","alt","width","defaultImage","height","RotatingLinesStyled","div","RotatingLines","strokeColor","margin","textAlign","strokeWidth","animationDuration","visible"],"sourceRoot":""}